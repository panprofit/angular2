var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from '@angular/core';
import { Observable } from 'rxjs';
import { DialogService } from "./dialog.service";
export var DialogComponent = (function () {
    /**
     * Constructor
     * @param {DialogService} dialogService - instance of DialogService
     */
    function DialogComponent(dialogService) {
        this.dialogService = dialogService;
    }
    /**
     *
     * @param {any} data
     * @return {Observable<any>}
     */
    DialogComponent.prototype.fillData = function (data) {
        var _this = this;
        if (data === void 0) { data = {}; }
        var keys = Object.keys(data);
        for (var i = 0, length_1 = keys.length; i < length_1; i++) {
            var key = keys[i];
            this[key] = data[key];
        }
        return Observable.create(function (observer) {
            _this.observer = observer;
            return function () {
                _this.close();
            };
        });
    };
    /**
     * Closes dialog
     */
    DialogComponent.prototype.close = function () {
        this.dialogService.removeDialog(this);
    };
    /**
     * OnDestroy handler
     */
    DialogComponent.prototype.ngOnDestroy = function () {
        if (this.observer) {
            this.observer.next(this.result);
        }
    };
    DialogComponent = __decorate([
        Component({
            selector: 'pagination'
        }), 
        __metadata('design:paramtypes', [DialogService])
    ], DialogComponent);
    return DialogComponent;
}());
//# sourceMappingURL=/home/user/Projects/angular2/src/node_modules/ng2-bootstrap-modal/src/dialog.component.js.map